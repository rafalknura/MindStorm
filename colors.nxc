int wanted_color;
int color_buffor = 5;
int COLOR = IN_4;

void set_color() {
     SetSensorColorBlue(COLOR);
     ResetSensor(COLOR);
     Wait(1000);
     PlaySound(SOUND_DOUBLE_BEEP);
     wanted_color = Sensor(COLOR);
     Wait(1000);
     PlaySound(SOUND_DOUBLE_BEEP);
     Wait(1000);
}

int wanted_color_min() {
    return wanted_color - color_buffor;
}

int wanted_color_max() {
    return wanted_color + color_buffor;
}

bool get_current_color() {
     Wait(10);
     return Sensor(COLOR);
}

bool color_matches() {
    int current_color_value = get_current_color();
    //TextOut(0, 10, "Wanted: " + NumToStr(wanted_color));
    //TextOut(0, 30, "Current: " + NumToStr(current_color_value));
    //Wait(2000);
    return (current_color_value > wanted_color_min())&&(current_color_value< wanted_color_max());
}

task main() {
     set_color();
     Wait(1000);
     if (color_matches()) {
        PlaySound(SOUND_UP);
     } else {
        PlaySound(SOUND_DOWN);
     }
}
